{"version":3,"sources":["components/TodoList/TodoList.jsx","api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["TodoList","state","todos","props","searchQuery","completedFilter","handleChange","event","target","value","name","setState","getVisibleTodos","normalizedQuery","toLowerCase","filter","todo","title","includes","filterCompletedTodos","completed","this","selectedUserId","onSelectUser","visibleTodos","className","onChange","type","placeholder","map","key","id","classNames","checked","readOnly","userId","onClick","React","PureComponent","defaultProps","request","url","option","fetch","then","res","ok","Error","status","statusText","json","getTodos","a","getUser","CurrentUser","user","loadData","prevProps","data","email","phone","onClearSelectUser","Component","App","selectUser","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c63e3bce.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class TodoList extends React.PureComponent {\n  state = {\n    todos: this.props.todos,\n    searchQuery: '',\n    completedFilter: 'all',\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  getVisibleTodos = (todos, searchQuery) => {\n    const normalizedQuery = searchQuery.toLowerCase();\n\n    return todos.filter(todo => todo.title\n      && todo.title.toLowerCase().includes(normalizedQuery));\n  }\n\n  filterCompletedTodos = (todos, completedFilter) => todos.filter(todo => (\n    completedFilter === 'completed'\n      ? todo.completed\n      : !todo.completed\n  ))\n\n  render() {\n    const { selectedUserId, onSelectUser } = this.props;\n    const { todos, searchQuery, completedFilter } = this.state;\n\n    let visibleTodos = this.getVisibleTodos(todos, searchQuery);\n\n    if (completedFilter !== 'all') {\n      visibleTodos = this.filterCompletedTodos(visibleTodos, completedFilter);\n    }\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div>\n          <input\n            value={searchQuery}\n            name=\"searchQuery\"\n            onChange={this.handleChange}\n            type=\"text\"\n            placeholder=\"Type something for filtering todos\"\n          />\n\n          <select\n            name=\"completedFilter\"\n            value={completedFilter}\n            onChange={this.handleChange}\n          >\n            <option name=\"all\">all</option>\n            <option name=\"active\">active</option>\n            <option name=\"completed\">completed</option>\n          </select>\n        </div>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {visibleTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  {\n                    'TodoList__item--checked': todo.completed,\n                    'TodoList__item--unchecked': !todo.completed,\n                  },\n                )}\n              >\n                <label>\n                  <input type=\"checkbox\" checked={todo.completed} readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className={classNames(\n                    'button',\n                    'TodoList__user-button',\n                    {\n                      'TodoList__user-button--selected': todo.userId\n                        === selectedUserId,\n                    },\n                  )}\n                  type=\"button\"\n                  onClick={() => onSelectUser(todo.userId)}\n                >\n                  User&nbsp;#\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n      userId: PropTypes.number,\n    }),\n  ),\n  selectedUserId: PropTypes.number.isRequired,\n  onSelectUser: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, option) => fetch(`${BASE_URL}${url}`, option)\n  .then((res) => {\n    if (!res.ok) {\n      throw new Error(`${res.status} â€“ ${res.statusText}`);\n    }\n\n    return res.json();\n  });\n\nexport const getTodos = async() => request('/todos');\n\nexport const getUser = async userId => request(`/users/${userId}`);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\n\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({\n      user: user.data,\n    });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return !user ? (\n      <p>Loading...</p>\n    ) : (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => this.props.onClearSelectUser(0)}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onClearSelectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nimport { getTodos } from './api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos,\n    });\n  }\n\n  selectUser = (selectedUserId) => {\n    this.setState({ selectedUserId });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return todos.length !== 0 ? (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos.data}\n            selectedUserId={selectedUserId}\n            onSelectUser={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClearSelectUser={this.selectUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div>\n        <p>Loading...</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}